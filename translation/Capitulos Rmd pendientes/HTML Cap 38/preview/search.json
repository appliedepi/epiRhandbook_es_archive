[{"path":"index.html","id":"section","chapter":"","heading":"","text":"","code":""},{"path":"index.html","id":"r-para-epidemiología-aplicada-y-salud-pública","chapter":"","heading":"R para epidemiología aplicada y salud pública","text":"Este manual pretende:Servir como breve guía de referencia para escribir código en RProporcionar ejemplos detallados que aborden problemas epidemiológicos.Ayudar profesionales de la epidemiología en su transición RSer accesible en entornos con baja conectividad Internet través de una versión sin conexión \nEscrito y traducido por profesionales de la epidemiología, para profesionales de la epidemiologíaSomos epis de campo de todo el mundo, escribiendo en nuestro tiempo libre para ofrecer este recurso la comunidad. Tu apoyo y comentarios son muy bienvenidos:Cuestioanrio onlineEnvía un email epiRhandbook@gmail.com o un tweet @epiRhandbookEnvía problemas nuestro Repositorio Github","code":""},{"path":"index.html","id":"cómo-utilizar-este-manual","chapter":"","heading":"Cómo utilizar este manual","text":"Navega por las páginas del índice o utiliza el cuadro de búsquedaClica en los iconos “Copy” para copiar el códigoPuedes seguir paso paso las lecciones utilizando nuestros [datos de ejemplo][Download handbook data]Consulta la sección “Recursos” de cada página para obtener más materialVersión sin conexiónConsulta las instrucciones en la página de Descargar el Manual y los datos.IdiomasQueremos traducir este manual otros idiomas. Si deseas ayudar, ponte en contacto con nosotros.","code":""},{"path":"index.html","id":"agradecimientos","chapter":"","heading":"Agradecimientos","text":"Este manual ha sido elaborado mediante la colaboración de profesionales de la epidemiología de todo el mundo, basándonos en nuestra experiencia en organismos sanitarios locales, estatales, provinciales y nacionales, la Organización Mundial de la Salud (OMS), Médicos Sin Fronteras (MSF), sistemas hospitalarios e instituciones académicas.Este manual es un producto aprobado por ninguna organización específica. Aunque nos esforzamos por ser precisos, ofrecemos ninguna garantía sobre el contenido de este libro.","code":""},{"path":"index.html","id":"colaboradores","chapter":"","heading":"Colaboradores","text":"Redactor jefe: Neale BatraEquipo central del proyecto: Neale Batra, Alex Spina, Amrish Baidjoe, Pat Keating, Henry Laurenson-Schafer, Finlay CampbellAutores: Neale Batra, Alex Spina, Paula Blomquist, Finlay Campbell, Henry Laurenson-Schafer, Isaac Florence, Natalie Fischer, Aminata Ndiaye, Liza Coyer, Jonathan Polonsky, Yurie Izawa, Chris Bailey, Daniel Molling, Isha Berry, Emma Buajitti, Mathilde Mousset, Sara Hollis, Wen LinRevisores: Pat Keating, Annick Lenglet, Margot Charette, Danielly Xavier, Esther Kukielka, Michelle Sloan, Aybüke Koyuncu, Rachel Burke, Kate Kelsey, Berhe Etsay, John Rossow, Mackenzie Zendt, James Wright, Laura Haskins, Flavio Finger, Tim Taylor, Jae Hyoung Tim Lee, Brianna Bradley, Wayne Enanoria, Manual Albela Miranda, Molly Mantus, Pattama Ulrich, Joseph Timothy, Adam Vaughan, Olivia Varsaneux, Lionel Monteiro, Joao MuiangaEquipo de traducción al español: Luis Hernando Aguilar Ramirez, Xavier Buenaño G, Ignacio Castro Aguirre, Juan Carlos Fernández-Merino, Xaviera Molina Avendaño, Juan Francisco Monteagudo, Ximena Tolosa.Illustraciones: Calder Fong","code":""},{"path":"index.html","id":"financiación-y-apoyo","chapter":"","heading":"Financiación y apoyo","text":"El manual recibió apoyo financiaciero de TEPHINET, la red mundial de Programas de Formación en Epidemiología de Campo (FETP) través de una subvención para el desarrollo de capacidades de emergencia COVID-19.La Red de Antiguos Alumnos de (EAN) proporcionó apoyo administrativo, con un agradecimiento especial Annika Wendland. EPIET es el Programa Europeo de Formación en Epidemiología de Intervención.Un agradecimiento especial Médicos Sin Fronteras (MSF) Centro Operativo de Ámsterdam (OCA) por su apoyo durante la elaboración de este manual.Esta publicación fue respaldada por el Acuerdo de Cooperación número NU2GGH001873, financiado por los Centros para el Control y la Prevención de Enfermedades través de TEPHINET, un programa de Task Force Global Health. Su contenido es responsabilidad exclusiva de los autores y representa necesariamente las opiniones oficiales de los Centros para el Control y la Prevención de Enfermedades, el Departamento de Salud y Servicios Humanos, Task Force Global Health, Inc. o TEPHINET.","code":""},{"path":"index.html","id":"inspiración","chapter":"","heading":"Inspiración","text":"La multitud de tutoriales y viñetas que aportaron conocimientos para el desarrollo del contenido del manual se acreditan en sus respectivas páginas.De manera más general, las siguientes fuentes han servido de inspiración para este manual:\nEl proyecto “R4Epis” (una colaboración entre MSF y RECON)R Epidemics Consortium (RECON)El libro R Data Science (R4DS)bookdown: Creación de libros y documentos técnicos con R MarkdownNetlify alberga este sitio web","code":""},{"path":"index.html","id":"condiciones-de-uso-y-contribución","chapter":"","heading":"Condiciones de uso y contribución","text":"","code":""},{"path":"index.html","id":"licencia","chapter":"","heading":"Licencia","text":"Esta obra está bajo una Licencia Internacional Creative Commons Attribution-NonCommercial-ShareAlike 4.0.Los cursos académicos y los programas de formación en epidemiología pueden utilizar este manual con sus estudiantes. Si tienes preguntas sobre el uso que se le va dar, envía un correo electrónico epiRhandbook@gmail.com.","code":""},{"path":"index.html","id":"citación","chapter":"","heading":"Citación","text":"Batra, Neale, et al. Manual de R para Epidemiología. 2021. ","code":""},{"path":"index.html","id":"contribución","chapter":"","heading":"Contribución","text":"Si quieres hacer una contribución de contenido, por favor, ponte en contacto con nosotros primero través de Github o por correo electrónico. Estamos implementando un calendario de actualizaciones y estamos creando una guía para colaboradores.Ten en cuenta que el proyecto epiRhandbook se publica con un Código de Conducta del Colaborador . Al contribuir este proyecto, te comprometes respetar sus términos.","code":""},{"path":"phylogenetic-trees-1.html","id":"phylogenetic-trees-1","chapter":"1 Árboles filogenéticos. Borrador","heading":"1 Árboles filogenéticos. Borrador","text":"","code":""},{"path":"phylogenetic-trees-1.html","id":"overview-7","chapter":"1 Árboles filogenéticos. Borrador","heading":"1.1 Resumen","text":"Los árboles filogenéticos se utilizan para visualizar y describir el parentesco y la evolución de los organismos partir de la secuencia de su código genético.Pueden construirse partir de secuencias genéticas utilizando métodos basados en la distancia (como el método de unión de vecinos) o métodos basados en los caracteres (como el método de máxima verosimilitud y el método Bayesiano Markov Chain Monte Carlo). La secuenciación de nueva generación (NGS) se ha vuelto más asequible y se está utilizando cada vez más en la sanidad pública para describir los patógenos causantes de enfermedades infecciosas. Los dispositivos de secuenciación portátiles reducen el tiempo de respuesta y prometen hacer que los datos estén disponibles para apoyar la investigación de brotes en tiempo real. Los datos de NGS pueden utilizarse para identificar el origen o la fuente de una cepa de un brote y su propagación, así como para determinar la presencia de genes de resistencia los antimicrobianos. Para visualizar el parentesco genético entre las muestras se construye un árbol filogenético.En esta página aprenderemos utilizar el paquete ggtree, que permite la visualización combinada de árboles filogenéticos con datos de muestra adicionales en forma de dataframe. Esto nos permitirá observar patrones y mejorar la comprensión de la dinámica de los brotes.","code":"## Installing package into '/home/peron/R/x86_64-pc-linux-gnu-library/4.1'\n## (as 'lib' is unspecified)## Warning: package 'ggtree' is not available for this version of R\n## \n## A version of this package for your version of R might be available elsewhere,\n## see the ideas at\n## https://cran.r-project.org/doc/manuals/r-patched/R-admin.html#Installing-packages## \n## ggtree installed"},{"path":"phylogenetic-trees-1.html","id":"preparation-29","chapter":"1 Árboles filogenéticos. Borrador","heading":"1.2 Preparación","text":"","code":""},{"path":"phylogenetic-trees-1.html","id":"load-packages-25","chapter":"1 Árboles filogenéticos. Borrador","heading":"1.2.1 Cargar paquetes","text":"Este trozo de código muestra la carga de los paquetes necesarios. En este manual destacamos ‘p_load()’ de pacman, que instala el paquete si es necesario y lo carga para su uso. También puede cargar los paquetes instalados con library() de . Consulta la página sobre los fundamentos de R para obtener más información sobre los paquetes de R.","code":"\npacman::p_load(\n  rio,             # import/export\n  here,            # relative file paths\n  tidyverse,       # general data management and visualization\n  ape,             # to import and export phylogenetic files\n  ggtree,          # to visualize phylogenetic files\n  treeio,          # to visualize phylogenetic files\n  ggnewscale)      # to add additional layers of color schemes"},{"path":"phylogenetic-trees-1.html","id":"import-data-23","chapter":"1 Árboles filogenéticos. Borrador","heading":"1.2.2 Importar datos","text":"Los datos de esta página pueden descargarse con las instrucciones de la página de descarga de manuales y datos.Hay varios formatos diferentes en los que se puede almacenar un árbol filogenético (por ejemplo, Newick, NEXUS, Phylip). Uno de los más comunes es el formato de archivo Newick (.nwk), que es el estándar para representar árboles en forma legible por ordenador. Esto significa que un árbol completo puede expresarse en un formato de cadena como “((t2:0,04,t1:0,34):0,89,(t5:0,37,(t4:0,03,t3:0,67):0,9):0,59);”, enumerando todos los nodos y puntas y su relación (longitud de rama) entre sí.Nota: Es importante entender que el archivo del árbol filogenético en sí mismo contiene datos de secuenciación, sino que es simplemente el resultado de las distancias genéticas entre las secuencias. Por lo tanto, podemos extraer datos de secuenciación de un archivo de árbol.En primer lugar, utilizamos la función read.tree() del paquete ape para importar un archivo de árbol filogenético de Newick en formato .txt, y lo almacenamos en un objeto tipo lista “phylo”. Si es necesario, utiliza la función () del paquete para especificar la ruta relativa del archivo.Nota: En este caso el árbol newick se guarda como un archivo .txt para facilitar su manejo y descarga desde Github.Inspeccionamos nuestro objeto árbol y vemos que contiene 299 puntas (o muestras) y 236 nodos.En segundo lugar, importamos una tabla almacenada en un archivo .csv con información adicional para cada muestra secuenciada, como el sexo, el país de origen y los atributos de resistencia los antimicrobianos, utilizando la función import() del paquete rio:continuación se muestran las primeras 50 filas de los datos:","code":"\ntree <- ape::read.tree(\"Shigella_tree.txt\")\ntree## \n## Phylogenetic tree with 299 tips and 236 internal nodes.\n## \n## Tip labels:\n##   SRR5006072, SRR4192106, S18BD07865, S18BD00489, S17BD08906, S17BD05939, ...\n## Node labels:\n##   17, 29, 100, 67, 100, 100, ...\n## \n## Rooted; includes branch lengths.\nsample_data <- import(\"sample_data_Shigella_tree.csv\")"},{"path":"phylogenetic-trees-1.html","id":"clean-and-inspect","chapter":"1 Árboles filogenéticos. Borrador","heading":"1.2.3 Limpiar e inspeccionar","text":"Limpiamos e inspeccionamos nuestros datos: Para asignar los datos de muestra correctos al árbol filogenético, los valores de la columna Sample_ID en el dataframe sample_data deben coincidir con los valores de tip.labels en el archivo tree:Comprobamos el formato de los tip.labels en el archivo de árbol mirando las 6 primeras entradas usando con head() de R base.También nos aseguramos de que la primera columna de nuestro dataframe sample_data sea Sample_ID. Miramos los nombres de las columnas de nuestro dataframe utilizando colnames() de R base.Miramos los Sample_IDs en el dataframe para asegurarnos de que el formato es el mismo que en el tip.label (por ejemplo, las letras son todas mayúsculas, hay barras bajas adicionales _ entre las letras y los números, etc.)También podemos comparar si todas las muestras están presentes en el archivo tree y viceversa, generando un vector lógico de TRUE o FALSE donde coinciden o . Estos se imprimen aquí, para simplificar.Podemos utilizar estos vectores para mostrar cualquier ID de muestra que esté en el árbol (hay ninguna).Al inspeccionar podemos ver que el formato de Sample_ID en el dataframe corresponde al formato de los nombres de las muestras en el tip.labels. es necesario que estén clasificados en el mismo orden para que coincidan.Estamos listos para ir!","code":"\nhead(tree$tip.label) ## [1] \"SRR5006072\" \"SRR4192106\" \"S18BD07865\" \"S18BD00489\" \"S17BD08906\" \"S17BD05939\"\ncolnames(sample_data)   ##  [1] \"Sample_ID\"                  \"serotype\"                   \"Country\"                    \"Continent\"                  \"Travel_history\"            \n##  [6] \"Year\"                       \"Belgium\"                    \"Source\"                     \"Gender\"                     \"gyrA_mutations\"            \n## [11] \"macrolide_resistance_genes\" \"MIC_AZM\"                    \"MIC_CIP\"\nhead(sample_data$Sample_ID) # we again inspect only the first 6 using head()## [1] \"S17BD05944\" \"S15BD07413\" \"S18BD07247\" \"S19BD07384\" \"S18BD07338\" \"S18BD02657\"\nsample_data$Sample_ID %in% tree$tip.label\n\ntree$tip.label %in% sample_data$Sample_ID\nsample_data$Sample_ID[!tree$tip.label %in% sample_data$Sample_ID]## character(0)"},{"path":"phylogenetic-trees-1.html","id":"simple-tree-visualization","chapter":"1 Árboles filogenéticos. Borrador","heading":"1.3 Visualización simple de un árbol","text":"","code":""},{"path":"phylogenetic-trees-1.html","id":"different-tree-layouts","chapter":"1 Árboles filogenéticos. Borrador","heading":"1.3.1 Different tree layouts","text":"ggtree ofrece muchos formatos de presentación diferentes y algunos pueden ser más adecuados para su propósito específico que otros. continuación se muestran algunas demostraciones. Para otras opciones, consulta este libro en línea.continuación, algunos ejemplos de disposición de árboles:","code":"\nggtree(tree)                                            # simple linear tree\nggtree(tree,  branch.length = \"none\")                   # simple linear tree with all tips aligned\nggtree(tree, layout=\"circular\")                         # simple circular tree\nggtree(tree, layout=\"circular\", branch.length = \"none\") # simple circular tree with all tips aligned"},{"path":"phylogenetic-trees-1.html","id":"simple-tree-plus-sample-data","chapter":"1 Árboles filogenéticos. Borrador","heading":"1.3.2 Árbol simple con datos de muestra","text":"El operador %<+% se utiliza para conectar el dataframe sample_data con el archivo tree. La anotación más sencilla de su árbol es la adición de los nombres de las muestras en las puntas, así como la coloración de los puntos de las puntas y, si se desea, de las ramas:Este es un ejemplo de árbol circular:Puedes exportar el gráfico de árbol con ggsave() como lo harías con cualquier otro objeto ggplot. Escrito de esta manera, ggsave() guarda la última imagen producida en la ruta de archivo que especifiques. Recuerde que puede utilizar () y rutas de archivo relativas para guardar fácilmente en subcarpetas, etc.","code":"\nggtree(tree, layout = \"circular\", branch.length = 'none') %<+% sample_data + # %<+% adds dataframe with sample data to tree\n  aes(color = I(Belgium))+                       # color the branches according to a variable in your dataframe\n  scale_color_manual(\n    name = \"Sample Origin\",                      # name of your color scheme (will show up in the legend like this)\n    breaks = c(\"Yes\", \"No\"),                     # the different options in your variable\n    labels = c(\"NRCSS Belgium\", \"Other\"),        # how you want the different options named in your legend, allows for formatting\n    values = c(\"blue\", \"black\"),                  # the color you want to assign to the variable \n    na.value = \"black\") +                        # color NA values in black as well\n  new_scale_color()+                             # allows to add an additional color scheme for another variable\n    geom_tippoint(\n      mapping = aes(color = Continent),          # tip color by continent. You may change shape adding \"shape = \"\n      size = 1.5)+                               # define the size of the point at the tip\n  scale_color_brewer(\n    name = \"Continent\",                    # name of your color scheme (will show up in the legend like this)\n    palette = \"Set1\",                      # we choose a set of colors coming with the brewer package\n    na.value = \"grey\") +                    # for the NA values we choose the color grey\n  geom_tiplab(                             # adds name of sample to tip of its branch \n    color = 'black',                       # (add as many text lines as you wish with + , but you may need to adjust offset value to place them next to each other)\n    offset = 1,\n    size = 1,\n    geom = \"text\",\n    align = TRUE)+    \n  ggtitle(\"Phylogenetic tree of Shigella sonnei\")+       # title of your graph\n  theme(\n    axis.title.x = element_blank(), # removes x-axis title\n    axis.title.y = element_blank(), # removes y-axis title\n    legend.title = element_text(    # defines font size and format of the legend title\n      face = \"bold\",\n      size = 12),   \n    legend.text=element_text(       # defines font size and format of the legend text\n      face = \"bold\",\n      size = 10),  \n    plot.title = element_text(      # defines font size and format of the plot title\n      size = 12,\n      face = \"bold\"),  \n    legend.position = \"bottom\",     # defines placement of the legend\n    legend.box = \"vertical\",        # defines placement of the legend\n    legend.margin = margin())   \nggsave(\"example_tree_circular_1.png\", width = 12, height = 14)"},{"path":"phylogenetic-trees-1.html","id":"tree-manipulation","chapter":"1 Árboles filogenéticos. Borrador","heading":"1.4 Manipulación de árboles","text":"veces puede tener un árbol filogenético muy grande y sólo le interesa una parte del árbol. Por ejemplo, si ha producido un árbol que incluye muestras históricas o internacionales para obtener una gran visión general de dónde puede encajar su conjunto de datos en el panorama general. Pero luego, para ver más de cerca sus datos, quiere inspeccionar sólo esa parte del árbol más grande.Dado que el archivo del árbol filogenético es sólo el resultado del análisis de los datos de secuenciación, podemos manipular el orden de los nodos y las ramas en el propio archivo. Estos ya han sido determinados en análisis anteriores partir de los datos NGS en bruto. Sin embargo, podemos ampliar partes, ocultar partes e incluso subconjuntar partes del árbol.","code":""},{"path":"phylogenetic-trees-1.html","id":"zoom-in","chapter":"1 Árboles filogenéticos. Borrador","heading":"1.4.1 Acercarse","text":"Si quieres “cortar” tu árbol, sino sólo inspeccionar una parte de él más de cerca, puedes acercarte para ver una parte específica.En primer lugar, trazamos todo el árbol en formato lineal y añadimos etiquetas numéricas cada nodo del árbol.Para acercarse una rama en particular (que sobresale la derecha), utiliza viewClade() en el objeto ggtree p y proporcione el número de nodo para verlo más de cerca:","code":"\np <- ggtree(tree,) %<+% sample_data +\n  geom_tiplab(size = 1.5) +                # labels the tips of all branches with the sample name in the tree file\n  geom_text2(\n    mapping = aes(subset = !isTip,\n                  label = node),\n    size = 5,\n    color = \"darkred\",\n    hjust = 1,\n    vjust = 1)                            # labels all the nodes in the tree\n\np  # print\nviewClade(p, node = 452)"},{"path":"phylogenetic-trees-1.html","id":"collapsing-branches","chapter":"1 Árboles filogenéticos. Borrador","heading":"1.4.2 Ramas colapsadas","text":"Sin embargo, podemos querer ignorar esta rama y podemos colapsarla en ese mismo nodo (nodo 452) utilizando collapse(). Este árbol se define como p_collapsed.Para mayor claridad, cuando imprimimos p_collapsed, añadimos un geom_point2() (un diamante azul) en el nodo de la rama colapsada.","code":"\np_collapsed <- collapse(p, node = 452)\np_collapsed\np_collapsed + \ngeom_point2(aes(subset = (node == 452)),  # we assign a symbol to the collapsed node\n            size = 5,                     # define the size of the symbol\n            shape = 23,                   # define the shape of the symbol\n            fill = \"steelblue\")           # define the color of the symbol"},{"path":"phylogenetic-trees-1.html","id":"subsetting-a-tree","chapter":"1 Árboles filogenéticos. Borrador","heading":"1.4.3 Subconjunto de un árbol","text":"Si queremos hacer un cambio más permanente y crear un nuevo árbol reducido con el que trabajar, podemos subconjuntar parte de él con tree_subset(). Luego se puede guardar como un nuevo archivo de árbol o archivo .txt.En primer lugar, inspeccionamos los nodos del árbol y las etiquetas de las puntas para decidir qué se va subconjuntar.Ahora, digamos que hemos decidido hacer un subconjunto del árbol en el nodo 528 (mantener sólo las puntas dentro de esta rama después del nodo 528) y lo guardamos como un nuevo objeto sub_tree1:Veamos el subconjunto del árbol 1:También puede hacer un subconjunto basado en una muestra en particular, especificando cuántos nodos “hacia atrás” quiere incluir. Vamos subconjuntar la misma parte del árbol basándonos en una muestra, en este caso S17BD07692, retrocediendo 9 nodos y lo guardamos como un nuevo objeto sub_tree2:Veamos el subconjunto del árbol 2:También puede guardar su nuevo árbol como un tipo Newick o incluso un archivo de texto utilizando la función write.tree() del paquete ape:","code":"\nggtree(\n  tree,\n  branch.length = 'none',\n  layout = 'circular') %<+% sample_data +               # we add the asmple data using the %<+% operator\n  geom_tiplab(size = 1)+                                # label tips of all branches with sample name in tree file\n  geom_text2(\n    mapping = aes(subset = !isTip, label = node),\n    size = 3,\n    color = \"darkred\") +                                # labels all the nodes in the tree\n theme(\n   legend.position = \"none\",                            # removes the legend all together\n   axis.title.x = element_blank(),\n   axis.title.y = element_blank(),\n   plot.title = element_text(size = 12, face=\"bold\"))\nsub_tree1 <- tree_subset(\n  tree,\n  node = 528)                                            # we subset the tree at node 528\nggtree(sub_tree1) +\n  geom_tiplab(size = 3) +\n  ggtitle(\"Subset tree 1\")\nsub_tree2 <- tree_subset(\n  tree,\n  \"S17BD07692\",\n  levels_back = 9) # levels back defines how many nodes backwards from the sample tip you want to go\nggtree(sub_tree2) +\n  geom_tiplab(size =3)  +\n  ggtitle(\"Subset tree 2\")\n# to save in .nwk format\nape::write.tree(sub_tree2, file='data/phylo/Shigella_subtree_2.nwk')\n\n# to save in .txt format\nape::write.tree(sub_tree2, file='data/phylo/Shigella_subtree_2.txt')"},{"path":"phylogenetic-trees-1.html","id":"rotating-nodes-in-a-tree","chapter":"1 Árboles filogenéticos. Borrador","heading":"1.4.4 Rotación de nodos en un árbol","text":"Como ya hemos dicho, podemos cambiar el orden de las puntas o de los nodos en el árbol, ya que éste se basa en su parentesco genético y está sujeto manipulación visual. Pero podemos rotar las ramas alrededor de los nodos si eso facilita nuestra visualización.En primer lugar, trazamos nuestro nuevo subconjunto de árbol 2 con las etiquetas de los nodos para elegir el nodo que queremos manipular y lo almacenamos en un objeto ggtree plot p.Luego podemos manipular los nodos aplicando ggtree::rotate() o ggtree::flip(): Nota: para ilustrar qué nodos estamos manipulando aplicamos primero la función geom_hilight() de ggtree para resaltar las muestras de los nodos que nos interesan y almacenamos ese objeto de trazado de ggtree en un nuevo objeto p1.Ahora podemos rotar el nodo 37 en el objeto p1 para que las muestras del nodo 38 se muevan hacia arriba. Almacenamos el árbol rotado en un nuevo objeto p2O podemos usar el comando flip para rotar el nodo 36 en el objeto p1 y cambiar el nodo 37 la parte superior y el nodo 39 la parte inferior. Almacenamos el árbol volteado en un nuevo objeto p3.","code":"\np <- ggtree(sub_tree2) +  \n  geom_tiplab(size = 4) +\n  geom_text2(aes(subset=!isTip, label=node), # labels all the nodes in the tree\n             size = 5,\n             color = \"darkred\", \n             hjust = 1, \n             vjust = 1) \np\np1 <- p + geom_hilight(  # highlights node 39 in blue, \"extend =\" allows us to define the length of the color block\n  node = 39,\n  fill = \"steelblue\",\n  extend = 0.0017) +  \ngeom_hilight(            # highlights the node 37 in yellow\n  node = 37,\n  fill = \"yellow\",\n  extend = 0.0017) +               \nggtitle(\"Original tree\")\n\n\np1 # print\np2 <- rotate(p1, 37) + \n      ggtitle(\"Rotated Node 37\")\n\n\np2   # print\np3 <-  flip(p1, 39, 37) +\n      ggtitle(\"Rotated Node 36\")\n\n\np3   # print"},{"path":"phylogenetic-trees-1.html","id":"example-subtree-with-sample-data-annotation","chapter":"1 Árboles filogenéticos. Borrador","heading":"1.4.5 Ejemplo de subárbol con anotación de datos de muestra","text":"Digamos que estamos investigando el grupo de casos con expansión clonal que se produjo en 2017 y 2018 en el nodo 39 de nuestro subárbol. Añadimos el año de aislamiento de la cepa, así como el historial de viajes y el color por país para ver el origen de otras cepas estrechamente relacionadas:Nuestra observación apunta un evento de importación de cepas procedentes de Asia, que luego circularon en Bélgica lo largo de los años y parecen haber causado nuestro último brote.","code":"\nggtree(sub_tree2) %<+% sample_data +     # we use th %<+% operator to link to the sample_data\n  geom_tiplab(                          # labels the tips of all branches with the sample name in the tree file\n    size = 2.5,\n    offset = 0.001,\n    align = TRUE) + \n  theme_tree2()+\n  xlim(0, 0.015)+                       # set the x-axis limits of our tree\n  geom_tippoint(aes(color=Country),     # color the tip point by continent\n                size = 1.5)+ \n  scale_color_brewer(\n    name = \"Country\", \n    palette = \"Set1\", \n    na.value = \"grey\")+\n  geom_tiplab(                          # add isolation year as a text label at the tips\n    aes(label = Year),\n    color = 'blue',\n    offset = 0.0045,\n    size = 3,\n    linetype = \"blank\" ,\n    geom = \"text\",\n    align = TRUE)+ \n  geom_tiplab(                          # add travel history as a text label at the tips, in red color\n    aes(label = Travel_history),\n    color = 'red',\n    offset = 0.006,\n    size = 3,\n    linetype = \"blank\",\n    geom = \"text\",\n    align = TRUE)+ \n  ggtitle(\"Phylogenetic tree of Belgian S. sonnei strains with travel history\")+  # add plot title\n  xlab(\"genetic distance (0.001 = 4 nucleotides difference)\")+                    # add a label to the x-axis \n  theme(\n    axis.title.x = element_text(size = 10),\n    axis.title.y = element_blank(),\n    legend.title = element_text(face = \"bold\", size = 12),\n    legend.text = element_text(face = \"bold\", size = 10),\n    plot.title = element_text(size = 12, face = \"bold\"))"},{"path":"phylogenetic-trees-1.html","id":"more-complex-trees-adding-heatmaps-of-sample-data","chapter":"1 Árboles filogenéticos. Borrador","heading":"1.5 Árboles más complejos: añadir mapas térmicos de datos de muestra","text":"Podemos añadir información más compleja, como la presencia categórica de genes de resistencia los antimicrobianos y valores numéricos para la resistencia realmente medida los antimicrobianos en forma de mapa de calor utilizando la función ggtree::gheatmap().Primero necesitamos trazar nuestro árbol (puede ser lineal o circular) y almacenarlo en un nuevo objeto ggtree plot p: Utilizaremos el subárbol de la parte 3).En segundo lugar, preparamos nuestros datos. Para visualizar las diferentes variables con nuevos esquemas de color, subestablecimos nuestro dataframe la variable deseada. Es importante añadir el Sample_ID como rownames de lo contrario puede coincidir los datos con el árbol tip.labels:En nuestro ejemplo, queremos observar el género y las mutaciones que podrían conferir resistencia la ciprofloxacina, un importante antibiótico de primera línea utilizado para tratar las infecciones por Shigella.Creamos un dataframe para el género:Creamos un dataframe para las mutaciones en el gen gyrA, que confieren resistencia la ciprofloxacina:Creamos un dataframe para la concentración inhibitoria mínima (CIM) medida para la Ciprofloxacina del laboratorio:Creamos un primer gráfico añadiendo un mapa de calor binario para el género al árbol filogenético y almacenándolo en un nuevo objeto de gráfico ggtree h1:continuación, añadimos información sobre las mutaciones en el gen gyrA, que confieren resistencia la ciprofloxacina:Nota: La presencia de mutaciones puntuales cromosómicas en los datos de WGS se determinó previamente utilizando la herramienta PointFinder desarrollada por Zankari et al. (véase la referencia en la sección de referencias adicionales)En primer lugar, asignamos un nuevo esquema de colores nuestro objeto de trazado existente h1 y lo almacenamos en un objeto ahora h2. Esto nos permite definir y cambiar los colores para nuestra segunda variable en el mapa de calor.continuación, añadimos la segunda capa del mapa de calor h2 y almacenamos los gráficos combinados en un nuevo objeto h3:Repetimos el proceso anterior, añadiendo primero una nueva capa de escala de colores nuestro objeto existente h3, y luego añadiendo los datos continuos sobre la concentración inhibitoria mínima (CIM) de Ciprofloxacina para cada cepa al objeto resultante h4 para producir el objeto final h5:Podemos hacer el mismo ejercicio para un árbol lineal:Primero añadimos el género:continuación, añadimos las mutaciones de resistencia la ciprofloxacina después de añadir otra capa de colores:continuación, añadimos la concentración mínima inhibitoria determinada por el laboratorio (MIC):","code":"\np <- ggtree(sub_tree2, branch.length='none', layout='circular') %<+% sample_data +\n  geom_tiplab(size =3) + \n theme(\n   legend.position = \"none\",\n    axis.title.x = element_blank(),\n    axis.title.y = element_blank(),\n    plot.title = element_text(\n      size = 12,\n      face = \"bold\",\n      hjust = 0.5,\n      vjust = -15))\np\ngender <- data.frame(\"gender\" = sample_data[,c(\"Gender\")])\nrownames(gender) <- sample_data$Sample_ID\ncipR <- data.frame(\"cipR\" = sample_data[,c(\"gyrA_mutations\")])\nrownames(cipR) <- sample_data$Sample_ID\nMIC_Cip <- data.frame(\"mic_cip\" = sample_data[,c(\"MIC_CIP\")])\nrownames(MIC_Cip) <- sample_data$Sample_ID\nh1 <-  gheatmap(p, gender,                                 # we add a heatmap layer of the gender dataframe to our tree plot\n                offset = 10,                               # offset shifts the heatmap to the right,\n                width = 0.10,                              # width defines the width of the heatmap column,\n                color = NULL,                              # color defines the boarder of the heatmap columns\n         colnames = FALSE) +                               # hides column names for the heatmap\n  scale_fill_manual(name = \"Gender\",                       # define the coloring scheme and legend for gender\n                    values = c(\"#00d1b1\", \"purple\"),\n                    breaks = c(\"Male\", \"Female\"),\n                    labels = c(\"Male\", \"Female\")) +\n   theme(legend.position = \"bottom\",\n        legend.title = element_text(size = 12),\n        legend.text = element_text(size = 10),\n        legend.box = \"vertical\", legend.margin = margin())## Scale for 'y' is already present. Adding another scale for 'y', which will replace the existing scale.## Scale for 'fill' is already present. Adding another scale for 'fill', which will replace the existing scale.\nh1\nh2 <- h1 + new_scale_fill() \nh3 <- gheatmap(h2, cipR,         # adds the second row of heatmap describing Ciprofloxacin resistance mutations\n               offset = 12, \n               width = 0.10, \n               colnames = FALSE) +\n  scale_fill_manual(name = \"Ciprofloxacin resistance \\n conferring mutation\",\n                    values = c(\"#fe9698\",\"#ea0c92\"),\n                    breaks = c( \"gyrA D87Y\", \"gyrA S83L\"),\n                    labels = c( \"gyrA d87y\", \"gyrA s83l\")) +\n   theme(legend.position = \"bottom\",\n        legend.title = element_text(size = 12),\n        legend.text = element_text(size = 10),\n        legend.box = \"vertical\", legend.margin = margin())+\n  guides(fill = guide_legend(nrow = 2,byrow = TRUE))## Scale for 'y' is already present. Adding another scale for 'y', which will replace the existing scale.## Scale for 'fill' is already present. Adding another scale for 'fill', which will replace the existing scale.\nh3\n# First we add the new coloring scheme:\nh4 <- h3 + new_scale_fill()\n\n# then we combine the two into a new plot:\nh5 <- gheatmap(h4, MIC_Cip,  \n               offset = 14, \n               width = 0.10,\n                colnames = FALSE)+\n  scale_fill_continuous(name = \"MIC for Ciprofloxacin\",  # here we define a gradient color scheme for the continuous variable of MIC\n                      low = \"yellow\", high = \"red\",\n                      breaks = c(0, 0.50, 1.00),\n                      na.value = \"white\") +\n   guides(fill = guide_colourbar(barwidth = 5, barheight = 1))+\n   theme(legend.position = \"bottom\",\n        legend.title = element_text(size = 12),\n        legend.text = element_text(size = 10),\n        legend.box = \"vertical\", legend.margin = margin())## Scale for 'y' is already present. Adding another scale for 'y', which will replace the existing scale.## Scale for 'fill' is already present. Adding another scale for 'fill', which will replace the existing scale.\nh5\np <- ggtree(sub_tree2) %<+% sample_data +\n  geom_tiplab(size = 3) + # labels the tips\n  theme_tree2()+\n  xlab(\"genetic distance (0.001 = 4 nucleotides difference)\")+\n  xlim(0, 0.015)+\n theme(legend.position = \"none\",\n      axis.title.y = element_blank(),\n      plot.title = element_text(size = 12, \n                                face = \"bold\",\n                                hjust = 0.5,\n                                vjust = -15))\np\nh1 <-  gheatmap(p, gender, \n                offset = 0.003,\n                width = 0.1, \n                color=\"black\", \n         colnames = FALSE)+\n  scale_fill_manual(name = \"Gender\",\n                    values = c(\"#00d1b1\", \"purple\"),\n                    breaks = c(\"Male\", \"Female\"),\n                    labels = c(\"Male\", \"Female\"))+\n   theme(legend.position = \"bottom\",\n        legend.title = element_text(size = 12),\n        legend.text = element_text(size = 10),\n        legend.box = \"vertical\", legend.margin = margin())## Scale for 'y' is already present. Adding another scale for 'y', which will replace the existing scale.## Scale for 'fill' is already present. Adding another scale for 'fill', which will replace the existing scale.\nh1\nh2 <- h1 + new_scale_fill()\nh3 <- gheatmap(h2, cipR,   \n               offset = 0.004, \n               width = 0.1,\n               color = \"black\",\n                colnames = FALSE)+\n  scale_fill_manual(name = \"Ciprofloxacin resistance \\n conferring mutation\",\n                    values = c(\"#fe9698\",\"#ea0c92\"),\n                    breaks = c( \"gyrA D87Y\", \"gyrA S83L\"),\n                    labels = c( \"gyrA d87y\", \"gyrA s83l\"))+\n   theme(legend.position = \"bottom\",\n        legend.title = element_text(size = 12),\n        legend.text = element_text(size = 10),\n        legend.box = \"vertical\", legend.margin = margin())+\n  guides(fill = guide_legend(nrow = 2,byrow = TRUE))## Scale for 'y' is already present. Adding another scale for 'y', which will replace the existing scale.## Scale for 'fill' is already present. Adding another scale for 'fill', which will replace the existing scale.\n h3\nh4 <- h3 + new_scale_fill()\nh5 <- gheatmap(h4, MIC_Cip, \n               offset = 0.005,  \n               width = 0.1,\n               color = \"black\", \n                colnames = FALSE)+\n  scale_fill_continuous(name = \"MIC for Ciprofloxacin\",\n                      low = \"yellow\", high = \"red\",\n                      breaks = c(0,0.50,1.00),\n                      na.value = \"white\")+\n   guides(fill = guide_colourbar(barwidth = 5, barheight = 1))+\n   theme(legend.position = \"bottom\",\n        legend.title = element_text(size = 10),\n        legend.text = element_text(size = 8),\n        legend.box = \"horizontal\", legend.margin = margin())+\n  guides(shape = guide_legend(override.aes = list(size = 2)))## Scale for 'y' is already present. Adding another scale for 'y', which will replace the existing scale.## Scale for 'fill' is already present. Adding another scale for 'fill', which will replace the existing scale.\nh5"},{"path":"phylogenetic-trees-1.html","id":"recursos-resources-29","chapter":"1 Árboles filogenéticos. Borrador","heading":"1.6 Recursos {resources-29}","text":"http://hydrodictyon.eeb.uconn.edu/eebedia/index.php/Ggtree# Clade_Colors\nhttps://bioconductor.riken.jp/packages/3.2/bioc/vignettes/ggtree/inst/doc/treeManipulation.html\nhttps://guangchuangyu.github.io/ggtree-book/chapter-ggtree.html\nhttps://bioconductor.riken.jp/packages/3.8/bioc/vignettes/ggtree/inst/doc/treeManipulation.htmlEa Zankari, Rosa Allesøe, Katrine G Joensen, Lina M Cavaco, Ole Lund, Frank M Aarestrup, PointFinder: una novedosa herramienta web para la detección basada en WGS de la resistencia los antimicrobianos asociada mutaciones puntuales cromosómicas en patógenos bacterianos, Journal Antimicrobial Chemotherapy, Volume 72, Issue 10, October 2017, Pages 2764-2768, https://doi.org/10.1093/jac/dkx217","code":""}]
